spring.application.name=grade-manager
server.port=8082

spring.datasource.url=jdbc:mysql://localhost:3306/project
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

api.gateway.url=http://localhost:9090

management.endpoints.web.exposure.include=refresh, info, health,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# == Circuit Breaker Instance: notificationService ==
resilience4j.circuitbreaker.instances.notificationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.notificationService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.notificationService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.notificationService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.notificationService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.notificationService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.notificationService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.notificationService.eventConsumerBufferSize=10

# == Time Limiter Instance: notificationService ==
# Note: TimeLimiter needs to be explicitly combined with CircuitBreaker usually
# using @TimeLimiter annotation alongside @CircuitBreaker or programmatic wrapping.
resilience4j.timelimiter.instances.notificationService.timeoutDuration=3s